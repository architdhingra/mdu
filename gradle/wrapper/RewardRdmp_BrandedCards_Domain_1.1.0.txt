{
	"swagger": "2.0",
	
	"info": {
			"title": "RewardRdmp_BrandedCards_Domain",
			"description": "Redeem  Rewards  for Credit Card customer.PCF Deployment Reference name -->  BRD-AM-D-RewardRdmp.<br> Version 1.0.0.- API to redeem rewards for credit card cusomer. <br> Version 1.1.0 - Added API for reward redemption history",
			"version": "1.1.0",
			"x-ibm-name": "RewardRdmp_BrandedCards_Domain"
		},
	
	"host": "127.0.0.1",
	"schemes": ["https"],
	"basePath": "/api",
	"produces": ["application/json"],
	"paths": {

		"/private/v1/cards/rewardsRedemption/{accountId}": {
			"post": {

				  "tags": ["RewardsRedemption"],
					"summary": "API to Redeem  Rewards ",
					"description": "API to Redeem Rewards",
					"operationId": "processCreditCardRewardsRedemption",
					"consumes": ["application/json"],
					"produces": ["application/json"],
				"parameters": [
					{
					"name": "accountId",
					"in": "path",
					"type": "string",
					"description": "Unique identifier associated with the card account",
					"required": true
					}, {
						"name": "Authorization",
						"in": "header",
						"description": "The Authorization Token received in earlier API call. This will contain the Access Token",
						"type": "string"
					}, {
						"name": "Accept-Language",
						"in": "header",
						"description": "The language of the user",
						"required": false,
						"type": "string"
					},{
						"name": "uuid",
						"in": "header",
						"description": "A 128 bit universally unique identifier (UUID) that you generate for every request and is used for tracking. It is recommended to use the output from Java UUID class or an equivalent",
						"type": "string",
						"required": true
					}, {
						"name": "citiUuid",
						"in": "header",
						"description": "Unique UUID generated by APIM for every request",
						"required": true,
						"type": "string"
					}, {
						"name": "sid",
						"in": "header",
						"description": "User session id",
						"type": "string",
						"required": true
					}, {
						"name": "client_id",
						"in": "header",
						"default": "29738e5a-fbbf-4b55-981d-d2f3d2a60605",
						"description": "The client ID received during application registration in the developer portal",
						"type": "string"
					}, {
						"name": "Accept",
						"in": "header",
						"description": "Content-Types that are acceptable for the response",
						"type": "string",
						"required": true
					},{
						"name": "channelId",
						"in": "header",
						"description": "Channel ID used by the user",
						"type": "string",
						"required": true
					},{
						"name": "contentType",
						"in": "header",
						"description": "Content types that are acceptable for the request. Currently we support application/json. This is present only for PUT/POST Methods",
						"type": "string",
						"required": true
					}, {
						"name": "businessCode",
						"in": "header",
						"description": "Business Code",
						"type": "string",
						"required": true
					}, {
						"name": "countryCode",
						"in": "header",
						"description": "Country code in 2 character ISO 3166 format",
						"type": "string",
						"required": true
					}, {
					"name": "GetRewardsRedemptionRequest",
					"required": true,
					"in": "body",
					"description": "Get Redemption Request",
					"schema": {
						"$ref": "#/definitions/RewardsRedemptionRequest"
					}
				}],
				"responses": {
					"200": {
						"description": "Successful operation.",
						"schema": {
							"$ref": "#/definitions/RewardRedemptionResponse"
						}
					},
					"400": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing or invalid Parameters</td></tr></table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"401": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization credentials are missing or invalid </td></tr> </table> ",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"500": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The request failed due to an internal error </td></tr> </table> ",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},

		
		"/private/v1/creditCards/accounts/{accountId}/rewards/redemption/selectAndCreditTransactions": {
			"get": {
			  "summary": "API to get Select and Credit Transaction Details",
				"description": "API to get Select and Credit Transaction  Details",
				"operationId": "processSelectCreditTransactionDetails",
					"tags": ["SelectAndCreditTransaction"],
				"parameters": [
				{
						"name": "Authorization",
						"in": "header",
						"description": "The Authorization Token received in earlier API call. This will contain the Access Token",
						"type": "string",
						"required": false
					}, {
					"name": "accountId",
					"in": "path",
					"type": "string",
					"description": "AccountId will be an ID used to represent an account number uniquely. This could be a random number (surrogate ids) or an Id generated using any hashing algorithm. Also, this could be confined to a session or stay with an account number for its life time",
					"required": true
				}, {
						"name": "Accept-Language",
						"in": "header",
						"description": "List of acceptable human languages for response in ISO format",
						"required": false,
						"type": "string"
					},{
						"name": "uuid",
						"in": "header",
						"description": "A 128 bit universally unique identifier (UUID) that you generate for every request and is used for tracking. It is recommended to use the output from Java UUID class or an equivalent",
						"type": "string",
						"required": true
					}, {
						"name": "citiUuid",
						"in": "header",
						"description": "Unique UUID generated by APIM for every request",
						"required": true,
						"type": "string"
					}, {
						"name": "sid",
						"in": "header",
						"description": "User session id",
						"type": "string",
						"required": false
					}, {
						"name": "client_id",
						"in": "header",
						"default": "29738e5a-fbbf-4b55-981d-d2f3d2a60605",
						"description": "The client ID received during application registration in the developer portal",
						"type": "string"
					}, {
						"name": "Accept",
						"in": "header",
						"description": "Content-Types that are acceptable for the response",
						"type": "string",
						"required": true
					},{
						"name": "channelId",
						"in": "header",
						"description": "Channel ID used by the user",
						"type": "string",
						"required": true
					}, {
						"name": "businessCode",
						"in": "header",
						"description": "3  character business code",
						"type": "string",
						"required": true
					}, {
						"name": "countryCode",
						"in": "header",
						"description": "2 character ISO format country code",
						"type": "string",
						"required": true
					},
					{
					"name": "hostConnect",
					"in": "header",
					"description": "AgentId, Agent access level (Only populated for IBS Assisted Channel), IBS Region, Customer Region; all values pipe delimited",
					"type": "string",
					"required": false
				}
				],
				"responses": {
					"200": {
						"description": "Successful operation.",
						"schema": {
							"$ref": "#/definitions/SelectAndCreditTransactionResponse"
						}
					},
					"400": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr> <td> error </td><td>invalidRequest</td> <td> Missing or invalid Parameters </td></tr> </table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}

					},
					"401": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization credentials are missing or invalid </td></tr></table> ",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"403": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The request operation is not configured to access this resource</td><td>Channel/Country/Business provided in the request is not supported currently</td></tr></table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The requested resource was not found</td></tr></table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"500": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The request failed due to an internal error/server unavailability</td></tr></table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/private/v1/creditCards/accounts/{accountId}/rewards/redemption/selectAndCreditRedemption": {
			"post": {
				
				
				"summary": "API to get Select and Credit Redemption Details ",
					"description": "API to get Select and Credit Redemption Details",
					"operationId": "processSelectCreditRedemptionDetails",
					"tags": ["SelectAndCreditRedemption"],
				"parameters": [
				  {
						"name": "Authorization",
						"in": "header",
						"description": "The Authorization Token received in earlier API call. This will contain the Access Token",
						"type": "string",
							"required": false
					},{
					"name": "Accept-Language",
					"in": "header",
					"description": "List of acceptable human languages for response in ISO format",
					"type": "string",
					"required": true
				  },{
					"name": "accountId",
					"in": "path",
					"type": "string",
					"description": "AccountId will be an ID used to represent an account number uniquely. This could be a random number (surrogate ids) or an Id generated using any hashing algorithm. Also, this could be confined to a session or stay with an account number for its life time",
					"required": true
				  },{
						"name": "citiUuid",
						"in": "header",
						"description": "Unique UUID generated by APIM for every request",
						"required": true,
						"type": "string"
					}, {
						"name": "sid",
						"in": "header",
						"description": "Session token generated during client authentication",
						"type": "string",
						"required": false
					}, {
					"name": "hostConnect",
					"in": "header",
					"description": "AgentId, Agent access level (Only populated for IBS Assisted Channel), IBS Region, Customer Region; all values pipe delimited",
					"type": "string",
					"required": false
					},{
						"name": "client_id",
						"in": "header",
						"default": "29738e5a-fbbf-4b55-981d-d2f3d2a60605",
						"description": "The client ID received during application registration in the developer portal",
						"type": "string",
						"required": false
					},  {
						"name": "Accept",
						"in": "header",
						"description": "Content types that are acceptable for the response. Currently we support application/json",
						"type": "string",
						"required": true
					},{
						"name": "channelId",
						"in": "header",
						"description": "Channel ID used by the user",
						"type": "string",
						"required": true
					},{
					"name": "Content-Type",
					"in": "header",
					"description": "Content types that are acceptable for the request. Currently we support application/json. This is present only for PUT/POST Methods",
					"required": true,
					"type": "string"
					},
          {
					"name": "businessCode",
					"in": "header",
					"description": "3  character business code",
					"type": "string",
					"required": true
					},
				  {
						"name": "countryCode",
						"in": "header",
						"description": "2 character ISO format country code",
						"type": "string",
						"required": true
					},
					{
					"name": "SelectAndCreditRedemptionRequest",
					"required": true,
					"in": "body",
					"description": "Get Select And Credit Redemption  Request",
					"schema": {
						"$ref": "#/definitions/SelectAndCreditRedemptionRequest"
					  }
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr> <td> error </td><td>invalidRequest</td> <td> Missing or invalid Parameters </td></tr> </table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}

					},
					
					"401": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization credentials are missing or invalid </td></tr></table> ",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"403": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The request operation is not configured to access this resource</td><td>Channel/Country/Business provided in the request is not supported currently</td></tr></table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The requested resource was not found</td></tr></table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"500": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The request failed due to an internal error/server unavailability</td></tr></table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/private/v1/creditCards/accounts/{accountId}/rewards/redemption/history": {
				"get": {
					"summary": "API to get rewards redemption history based on account and date range ",
					"description": "API to get rewards redemption history based on account and date range",
					"operationId": "processRedemptionHistoryOnDateRange",
					"tags": ["RewardRedemptionHistoryAll"],
					"parameters": [{
							"name": "accountId",
							"in": "path",
							"type": "string",
							"description": "AccountId will be an ID used to represent an account number uniquely. This could be a random number (surrogate ids) or an Id generated using any hashing algorithm. Also, this could be confined to a session or stay with an account number for its life time",
							"required": true
						}, {
							"name": "startDate",
							"in": "query",
							"type": "string",
							"format": "date",
							"description": "Start date of the date range to pull the data",
							"required": false
						}, {
							"name": "endDate",
							"in": "query",
							"type": "string",
							"format": "date",
							"description": "End date of the date range",
							"required": false
						},
						{
							"name": "Authorization",
							"in": "header",
							"description": "The Authorization Token received in earlier API call. This will contain the Access Token",
							"type": "string",
							"required": false
						}, {
							"name": "Accept-Language",
							"in": "header",
							"description": "List of acceptable human languages for response in ISO format",
							"type": "string",
							"required": false
						}, {
							"name": "uuid",
							"in": "header",
							"description": "A 128 bit universally unique identifier (UUID) that you generate for every request and is used for tracking. It is recommended to use the output from Java UUID class or an equivalent",
							"type": "string",
							"required": true
						},
						{
							"name": "citiUuid",
							"in": "header",
							"description": "Unique UUID generated by APIM for every request",
							"type": "string",
							"required": false
						}, {
							"name": "sid",
							"in": "header",
							"description": " Session token generated during client authentication",
							"type": "string",
							"required": false
						}, {
							"name": "Accept",
							"in": "header",
							"description": "Content types that are acceptable for the response. Currently we support application/json",
							"type": "string",
							"required": true
						}, {
							"name": "channelId",
							"in": "header",
							"description": "Channel ID used by the user",
							"type": "string",
							"required": true
						}, {
							"name": "businessCode",
							"in": "header",
							"description": "3 character business code",
							"type": "string",
							"required": true
						}, {
							"name": "countryCode",
							"in": "header",
							"description": "2 character ISO format country code",
							"required": true,
							"type": "string"
						},
						{
							"name": "client_id",
							"in": "header",
							"default": "29738e5a-fbbf-4b55-981d-d2f3d2a60605",
							"description": "The client ID received during application registration in the developer portal",
							"required": false,
							"type": "string"
						}, {
							"name": "hostConnect",
							"in": "header",
							"description": "AgentId, Agent access level (Only populated for IBS Assisted Channel), IBS Region, Customer Region; all values pipe delimited",
							"type": "string",
							"required": false
						}

					],
					"responses": {
						"200": {
							"description": "Successful operation.",
							"schema": {
								"$ref": "#/definitions/RewardRedemptionHistoryResponse"
							},
							"headers": {
							"uuid": {
								"description": "Echo back of the requestUUID",
								"type": "string"
							},
							"Content-Type": {
								"description": "The response Content-Type",
								"type": "string"
							},
							"citiUuid": {
								"description": "Echo back the Client CITIUUID received in the request",
								"type": "string"
							}
						}
						},
						
						 "204": {
						"description": "No Content"
						 },
						 "400": {
						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing or invalid Parameters</td></tr></table>",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
 					
 					
 					
 					
						"401": {
							"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization credentials are missing or invalid </td></tr></table> ",
							"schema": {
								"$ref": "#/definitions/ErrorResponse"
							}
						},
						"403": {
							"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The request operation is not configured to access this resource</td><td>Channel/Country/Business provided in the request is not supported currently</td></tr></table>",
							"schema": {
								"$ref": "#/definitions/ErrorResponse"
							}
						},
						"404": {
 						"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The requested resource was not found</td></tr></table>",
 						"schema": {
 							"$ref": "#/definitions/ErrorResponse"
 						}
 					},
						
						
						"500": {
							"description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The request failed due to an internal error/server unavailability</td></tr></table>",
							"schema": {
								"$ref": "#/definitions/ErrorResponse"
							}
						}
					}
				}
			}
	},
	"definitions": {
	  
	  "RewardRedemptionHistoryResponse": {
				"properties": {
				  
					"rewardRedemptionHistory": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/RewardRedemptionHistory"
						}
					},
						"ytdRedeemedPoints": {
							"type": "number",
							"description": "Year to Date total redeemed points"
						},
						
						"lifeTimeRedeemedPoints": {
							"type": "number",
							"description": "Life Time total redeemed points"
						}
				}
			},
			
			"RewardRedemptionHistory": {
				
					"properties": {
						"redemptionDate": {
							"type": "string",
							"format": "date",
							"description": "The Date when rewards are redeemed"
						},
						"redemptionAmount": {
					  	"description": "Redemption Amount for the Program.",
				  		"type": "number",
				  	 	"format": "BigDecimal",
					  	"example": "100"
			  	  		},
						
					  "redemptionOption": {
					  "$ref": "#/definitions/RedemptionOptionType"
						},
						
						"orderNumber": {
							"type": "string",
							"description": "Gift Card order number"
						},
					
					
						"redemptionStatus": {
							"description": "Current status of the redemption request",
							"type": "string",
							"enum": ["FUNDS_RETURNED'", "SUCCESSFUL"]
						},
						
						"displayAccountNumber": {
					  	"description": "A masked account number/last four(4) digits of account number that can be displayed to the customer.",
				  		"type": "string",
					  	"example": ""
			    			},
				  
					"bankAccount": {
							"$ref": "#/definitions/BankAccount"
					},
					"giftCard": {
							"$ref": "#/definitions/GiftCard"
						}

					}
				
			},
			
			"BankAccount": {
			"properties": {
				"routingNumber": {
					"type": "string",
					"description": "Routing number or routing transfer number used by banks to identify specific financial institutions within the United States. An ABA number is used for wires and electronic automatic clearing house (ACH) transactions such as electronic funds transfer, direct deposit, direct payment of consumer bills, e-checks, and tax payments, among others."
				},
				"bankAccountNumber": {
					"type": "string",
					"description": "This is the DDA number used along with routing number"
				},
				"bankName": {
					"description": "Bank Name",
					"type": "string"
				}
				}
			},
		
			"GiftCard": {
				"type": "array",
				"items": {
					"properties": {
						"giftCardDescription": {
							"type": "string",
							"description": "Description of gift card",
							"example": ""
						},
						"itemNumber": {
							"type": "string",
							"description": "Unique reference to the item",
							"example": ""
						},
						"giftCardRedemptionAmount": {
							"type": "number",
				  	 		"format": "BigDecimal",
							"description": "Amount that can be redeemed through gift card",
							"example": ""
						},
						
						"giftCardStatus": {
							"description": "Current status of the gift card",
							"type": "string",
							"enum": ["CANCEL",
								"CANCEL_BACKORDER",
								"CANCEL_BACKORDER_REFERRAL",
								"FULFILLED",
								"PENDING",
								"PENDING_BACKORDER",
								"PENDING_BACKORDER_BAD_ADDRESS",
								"RETURN_DEFECTIVE",
								"RETURN_WRONG_ITEM",
								"SUBMITTED",
								"VOID_NEVER_RECEIVED"
							]

						}

					}
				}
			},


		"RewardRedemptionResponse": {
			"properties": {
				"redemptionAmount": {
					"description": "Redemption Amount for the Program.",
					"type": "number",
					"example": "100"
				},
				"availableRewardBalance": {
					"description": "Available Reward/Point Balance.",
					"type": "number",
					"example": "954"
				}
			}
		},
		
		"RedemptionOptionType": {
			  "description": "Available Redemption Option",
			  "example": "STATEMENT_CREDIT",
			  "type": "string",
			  "enum": ["STATEMENT_CREDIT", "DIRECT_DEPOSIT", "CHECKS", "GIFT_CARDS", "SELECT_AND_CREDIT_TRANSACTION", "SEND_TO_PARTNER", "COSTCO_CERTIFICATE"]
		},
			
		"RewardsRedemptionRequest": {
			"properties": {
					"rewardsProgram": {
							  "description": "Type of Rewards Program",
							  "example": "CASH_BACK",
							  "type": "string",
							  "enum": ["MILES", "COSTCO_REWARDS", "CASH_BACK", "THANK_YOU", "CHOICE_REBATES","DRIVERS_EDGE","DIVIDEND","EASY_DEALS","EXPEDIA","REBATE","SHELL"]
				  
					},
				"redemptionOption": {
					"$ref": "#/definitions/RedemptionOptionType"
				},

				"redemptionAmount": {
					"description": "Redemption Amount for the Program.",
					"type": "number",
					"example": "100"
				},
				"destinationAccount": {
					"$ref": "#/definitions/DestinationAccount"
				}
			}
		},
		"DestinationAccount": {
			"type": "object",
			"required": [
				"accountNumber",
				"bankName",
				"bankRouteCode"
			],
			"properties": {
				"accountNumber": {
					"description": "bank account to redeem the rewards",
					"type": "string",
					"example": "12345"
				},
				"bankName": {
					"description": "Bank name of the account",
					"type": "string",
					"example": "12345"
				},
				"bankRouteCode": {
					"description": "rounting number of the Bank",
					"type": "string",
					"example": "12345"
				}
			}
		},
	
		
		"SelectAndCreditRedemptionRequest": {
			"properties": {
			   "selectAndCreditRedemption": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SelectAndCreditRedemption"
					}
				}
			}
		  
		},
		
		"SelectAndCreditRedemption": {
			"properties": {
			  "transactionDate": {
					"type": "string",
					"format": "date",
					"description": "SaleDate.This is the date merchant did the sale to the customer.Date the transaction was posted, in ISO 8601 format YYYY-MM-DD"
				},
				"transactionAmount": {
          "description": "The total transaction amount",
          "type": "number",
          "example": 10.50
        },
			
				"transactionDescription": {
          "type": "string",
          "description": "The description of the transaction",
          "example": "Coffee"
        },
				
				"transactionReferenceNumber": {
          "description": "A unique client value for this transaction, used for tracking this business transaction through all of downstream requests.",
          "type": "string",
          "example": "12345"
        },
				"pointsToRedeem": {
          "description": "The number of points to redeem towards the transaction amount",
          "type": "integer",
          "example": 1000
        }
			}
		  
		},
		
		
	"SelectAndCreditTransactionResponse": {
			"properties": {
			  "selectAndCreditTransaction": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SelectAndCreditTransaction"
					}
				}
			  
			}
		},
			"SelectAndCreditTransaction": {
			"properties": {
			  
			  "transactionDate": {
					"type": "string",
					"format": "date",
					"description": "SaleDate.This is the date merchant did the sale to the customer.Date the transaction was posted, in ISO 8601 format YYYY-MM-DD"
				},
				"transactionAmount": {
          "description": "The total transaction amount",
          "type": "number",
          "example": 10.50
        },
			
				"transactionDescription": {
          "type": "string",
          "description": "The description of the transaction",
          "example": "Coffee"
        },
				
				"transactionReferenceNumber": {
          "description": "A unique client value for this transaction, used for tracking this business transaction through all of downstream requests.",
          "type": "string",
          "example": "12345"
        },
				"pointsToRedeem": {
          "description": "The number of points to redeem towards the transaction amount",
          "type": "integer",
          "example": 1000
        }
			}
		},
		"ErrorResponse": {
			"properties": {
				"type": {
					"description": "Invalid - Request did not confirm to the specification and was unprocessed and rejected. Please fix the value and try again ",
					"type": "string",
					"enum": ["error",
						"warn",
						"invalid",
						"fatal"
					]
				},
				"code": {
					"description": "Error code which qualifies the error",
					"type": "string"
				},
				"details": {
					"description": "Human readable explanation specific to the occurrence of the problem",
					"type": "string"
				},
				"location": {
					"description": "The name of the field that resulted in the error",
					"type": "string"
				},
				"moreInfo": {
					"description": "URI to human readable documentation of the error",
					"type": "string"
				}
			},
			"required": ["type",
				"code"
			]
		}
	}
}